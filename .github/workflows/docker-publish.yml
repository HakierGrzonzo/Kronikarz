name: Docker publish

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: hakiergrzonzo/kronikarz-frontend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  backend:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: hakiergrzonzo/kornikarz-backend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Get version from tag
        id: get_version
        uses: battila7/get-version-action@v2
      - 
        name: Mark version
        if: steps.get_version.outputs.is-semver == 'true'
        run: echo ${{ steps.get_version.outputs.version-without-v }} > ./backend/backend/.version
      -
        name: Build and push fastapi
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deployment:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://dev.grzegorzkoperwas.site
    needs:
      - backend
      - frontend
    steps:
      - name: Deploy to XeonServ
        uses: HakierGrzonzo/ssh-pipeline@master
        with:
          host: ${{ secrets.PROD_IP }}
          user: ${{ secrets.PROD_USER }}
          port: ${{ secrets.PROD_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/${{ secrets.PROD_USER }}/Kronikarz/production
            docker-compose pull
            docker-compose down 
            git pull
            docker-compose up -d
            fortune /usr/share/fortune/pony
