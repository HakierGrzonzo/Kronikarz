FROM python:3.10 AS openapi

RUN python3 -m pip install poetry
WORKDIR /backend 
COPY ./backend/poetry.lock ./backend/pyproject.toml ./
RUN poetry config virtualenvs.in-project true --local
RUN poetry install --no-dev
COPY ./backend .
RUN poetry run python -m app openapi.json

FROM node:16-alpine AS builder
WORKDIR /frontend
COPY ./frontend/package-lock.json ./
COPY ./frontend/package.json ./
RUN npm install
ENV NODE_ENV=production
RUN mkdir app 
COPY --from=openapi /backend/openapi.json .
RUN npm run openprod
COPY ./frontend ./
RUN npm run build

FROM ubuntu

ENV TZ=Europe/Warsaw
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
#Lets install NGINX
RUN apt-get -y update && apt -y install nginx

#lets expose port 80
EXPOSE 80/tcp
CMD /usr/sbin/nginx && tail -f /dev/null

# let's copy the build
RUN mkdir /www
COPY ./nginx.conf /etc/nginx/nginx.conf
COPY --from=builder /frontend/dist/public /www/


